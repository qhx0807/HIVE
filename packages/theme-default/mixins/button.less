/* 
 * tint: 将颜色与白色混合，同时减少颜色的比例。
 * shade: 将颜色与黑色混合，减少了颜色的比例。
 * fade: 用于设置所选元素的颜色的透明度。
*/

// size
.btn-size(@padding; @font-size; @border-radius) {
  padding: @padding;
  font-size: @font-size;
  border-radius: @border-radius;
}

// color
.btn-color(@color, @background, @border) {
  color: @color;
  background-color: @background;
  border-color: @border;
}

// Status
.btn-status(@color, @background, @border) {
  .btn-color(@color, @background, @border);

  &:hover,
  &:focus {
    .btn-color(tint(@color, 20%); tint(@background, 20%); tint(@border, 20%));
  }

  &:active,
  &.active {
    .btn-color(tint(@color, 5%); tint(@background, 5%); tint(@border, 5%));
  }

  &:disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      .btn-color(@btn-disable-color; @btn-disable-bg; @btn-disable-border);
    }
  }
}

// button

.btn() {
  display: inline-block;
  margin: 0;
  outline: 0;
  font-weight: @btn-font-weight;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  border: 1px solid transparent;
  white-space: nowrap;
  line-height: @line-height-base;
  user-select: none;
  .btn-size(@btn-padding-default, @btn-font-size, @btn-border-radius);
  transition: color @transition-time linear,
    background-color @transition-time linear, border @transition-time linear;
  &,
  &:active,
  &:focus {
    outline: 0;
  }
  &:not([disabled]):hover {
    text-decoration: none;
  }
  &:not([disabled]):active {
    outline: 0;
    transition: none;
  }
  &.disabled,
  &[disabled] {
    cursor: not-allowed;
    > * {
      pointer-events: none;
    }
  }
  &-large {
    .btn-size(@btn-padding-large; @btn-font-size-large; @btn-border-radius);
  }
  &-small {
    .btn-size(@btn-padding-small; @btn-font-size; @btn-border-radius);
  }
}

// Default

.btn-default() {
  .btn-status(@btn-default-color, @btn-default-bg, @btn-default-border);
  &:hover {
    .btn-color(tint(@primary-color, 20%); white; tint(@primary-color, 20%));
  }
  &:active,
  &.active {
    .btn-color(shade(@primary-color, 5%); white; shade(@primary-color, 5%));
  }
}

// Primary
.btn-primary() {
  .btn-status(@btn-primary-color; @btn-primary-bg; @primary-color);
  &:hover,
  &.active,
  &:active {
    color: @btn-primary-color;
  }
}

// Ghost
.btn-ghost() {
  .btn-status(@btn-ghost-color, @btn-ghost-bg, @btn-ghost-border);
  &:hover {
    .btn-color(tint(@primary-color, 20%); @btn-ghost-bg; tint(@primary-color, 20%));
  }
  &:active,
  &.active {
    .btn-color(shade(@primary-color, 5%); @btn-ghost-bg; shade(@primary-color, 5%));
  }
}

// Dashed
.btn-dashed() {
  .btn-status(@btn-ghost-color, @btn-ghost-bg, @btn-ghost-border);
  border-style: dashed;
  &:hover {
    .btn-color(tint(@primary-color, 20%); @btn-ghost-bg; tint(@primary-color, 20%));
  }
  &:active,
  &.active {
    .btn-color(shade(@primary-color, 5%); @btn-ghost-bg; shade(@primary-color, 5%));
  }
}

// Text
.btn-text() {
  .btn-status(@btn-ghost-color, @btn-ghost-bg, transparent);
  &.disabled,
  &[disabled],
  fieldset[disabled] {
    .btn-color(@btn-disable-color; @btn-ghost-bg; transparent);
  }
  &:hover {
    .btn-color(tint(@primary-color, 20%); @btn-ghost-bg; transparent);
  }
  &:active,
  &.active {
    .btn-color(shade(@primary-color, 5%); @btn-ghost-bg; transparent);
  }
}

// Color
.btn-color(@color) {
  .btn-status(@btn-primary-color; @color; @color);
  &:hover,
  &:active,
  &.active {
    color: @btn-primary-color;
  }
}

// Circle
.btn-circle(@btnClassName: ive-btn) {
  border-radius: @btn-circle-size;

  &.@{btnClassName}-large {
    border-radius: @btn-circle-size-large;
  }

  &.@{btnClassName}-size {
    border-radius: @btn-circle-size-small;
  }

  &.@{btnClassName}-icon-only {
    .square(@btn-circle-size);
    .btn-size(0; @font-size-base + 2; 50%);

    &.@{btnClassName}-large {
      .square(@btn-circle-size-large);
      .btn-size(0; @btn-font-size-large + 2; 50%);
    }

    &.@{btnClassName}-small {
      .square(@btn-circle-size-small);
      .btn-size(0; @font-size-base; 50%);
    }
  }
}

.size(@width; @height) {
  width: @width;
  height: @height;
}

.square(@size) {
  .size(@size; @size);
}
